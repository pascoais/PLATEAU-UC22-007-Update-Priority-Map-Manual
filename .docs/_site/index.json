{
  "index.html": {
    "href": "index.html",
    "title": "令和4年度 民間ユースケース開発 UC22-007「3D都市モデルの更新優先度マップ」 | 3D都市モデルの更新優先度マップ",
    "keywords": "令和4年度 民間ユースケース開発 UC22-007「3D都市モデルの更新優先度マップ」 Project PLATEAUにて公開されている航空写真とALOS-3衛星（シミュレーション）画像の間において、建築物の変化箇所を検出し更新優先度のメッシュを生成します。 旧時期（2017年撮影 航空写真） 新時期（2019年撮影 ALOS-3衛星シミュレーション画像） ユースケースの概要 インフラ維持管理や災害復旧等の多様な領域で課題解決に貢献する3D都市モデルの活用を更に進めるためには、3D都市モデルの更新頻度を高め、現実の都市空間との同一性を保つことが重要となります。 本ユースケースでは、3D都市モデルの整備に利用した航空写真と撮影頻度が高い衛星画像を比較し、建物等の新築・滅失等の変化を抽出するAIモデルを開発しました。 これにより、3D都市モデルと現実空間の差分を低コストで迅速に可視化し、3D都市モデルのデータの更新を促していくことを目標としています。 開発システムの概要 Project PLATEAUにて公開されている航空写真とALOS-3衛星（シミュレーション）画像の間において、AIを用いて建築物の変化箇所を検出し、地域メッシュ（3～5次）単位で更新優先度の情報を持ったメッシュを生成します。 GitHubリポジトリにて、以下の処理を行うスクリプトをOSSとして公開しています。 変化検出に使用する画像のダウンロード 深層学習モデルを用いた旧時期航空写真と新時期ALOS-3衛星（シミュレーション）画像からの建築物の変化確率画像生成 生成した建築物の変化確率画像を用いた更新優先度マップの生成およびスタイリング ライセンス 本マニュアルの著作権は国土交通省に帰属します。 本マニュアルはProject PLATEAUのサイトポリシー（CC BY 4.0および政府標準利用規約2.0）に従い提供されています。 注意事項 本マニュアルは参考資料として提供しているものです。動作保証は行っておりません。 予告なく変更・削除する可能性があります。 本マニュアルの利用により生じた損失及び損害等について、国土交通省はいかなる責任も負わないものとします。 参考資料 3D都市モデルの更新優先度マップ 技術検証レポート PLATEAU Webサイト Use caseページ「3D都市モデルの更新優先度マップ」 GitHubリポジトリ"
  },
  "manual/create_update_priority_map.html": {
    "href": "manual/create_update_priority_map.html",
    "title": "更新優先度マップの作成 | 3D都市モデルの更新優先度マップ",
    "keywords": "更新優先度マップの作成 概要 本ページでは、建物変化確率画像から更新優先度マップの作成およびスタイリングを行います。 STEP1: 更新優先度マップの生成 以下のコマンドを実行して更新優先度マップのメッシュを生成します。 python create_mesh.py lsコマンドで更新優先度マップ作成の条件設定にて設定した画像の保存先に、3～5次メッシュのGeoJSONファイルが格納されていることを確認します。 命名規則は以下の通りになっています。 [ファイル名]_[地域メッシュの次数].geojson (update_priority_map) root@e5c04beb7310:/workspace/data/sample/mesh# ls sample_3rd.geojson sample_4th.geojson sample_5th.geojson (update_priority_map) root@e5c04beb7310:/workspace/data/sample/mesh# STEP2: 更新優先度マップのスタイリング 以下のコマンドを実行して更新優先度に応じて色付けされたメッシュを生成します。なお、色付けが反映されるのはsymplestyle-spec 対応のWebGISで表示する場合のみとなります。 python style_mesh.py lsコマンドで更新優先度マップ作成の条件設定にて設定した画像の保存先に、3～5次メッシュのGeoJSONファイルが格納されていることを確認します。 命名規則は以下の通りになっています。 [ファイル名]_[地域メッシュの次数]_[変化率計算時に使用した指標].geojson (update_priority_map) root@e5c04beb7310:/workspace/data/sample/priority_map# ls sample_3rd_lod0.geojson sample_4th_lod0.geojson sample_5th_lod0.geojson (update_priority_map) root@e5c04beb7310:/workspace/data/sample/priority_map# 備考: スタイリングについて 設定ファイルのstyle部分にてメッシュの枠線や塗りつぶしに関する設定を記載することが可能です。 対応する項目とその説明は、以下の表のようになります。 項目 説明 備考 stroke メッシュの枠線の色 16進カラーコードで記載 stroke-width メッシュの枠線の太さ 単位はpx stroke-opacity メッシュの枠線の透明度 0（完全に透過）～1（不透過）の10進小数で指定 fill メッシュの塗りつぶし色のリスト 左から優先度が低い順 16進カラーコードで記載 fill-opacity メッシュの塗りつぶし色の透明度 0（完全に透過）～1（不透過）の10進小数で指定"
  },
  "manual/download_image.html": {
    "href": "manual/download_image.html",
    "title": "画像のダウンロード | 3D都市モデルの更新優先度マップ",
    "keywords": "画像のダウンロード 概要 本ページでは、更新優先度マップを作成するために必要なデータである旧時期の航空写真および新時期のALOS-3衛星（シミュレーション）画像のダウンロードを行います。 STEP1: 旧時期航空写真のダウンロード Project PLATEUにて公開されているPLATEAUオルソから更新優先度マップ作成の条件設定で設定した範囲を建築物の変化検出の旧時期に使用する画像としてダウンロードします。 旧時期航空写真をダウンロードするには、以下のコマンドを実行してください。 python download_tile_image.py old STEP2: 新時期ALOS-3衛星（シミュレーション）画像のダウンロード 本ユースケース開発にて公開しているALOS-3衛星（シミュレーション）画像から更新優先度マップ作成の条件設定で設定した範囲を建築物の変化検出の新時期に使用する画像としてダウンロードします。 新時期ALOS-3衛星（シミュレーション）画像をダウンロードするには、以下のコマンドを実行してください。 python download_tile_image.py new STEP3: ダウンロードした画像の確認 更新優先度マップ作成の条件設定にて設定した画像の保存先にoldおよびnewというフォルダが生成されています。 oldには旧時期航空写真が、newには新時期ALOS-3衛星（シミュレーション）画像が保存されています。 lsコマンドで指定した3次メッシュコードをファイル名として、対象範囲の画像が格納されていることを確認します。 (update_priority_map) root@e5c04beb7310:/workspace/data/sample/image# ls old 52385627.png 52385628.png 52385629.png 52385637.png 52385638.png 52385639.png 52385647.png 52385648.png 52385649.png 52385627.png.aux.xml 52385628.png.aux.xml 52385629.png.aux.xml 52385637.png.aux.xml 52385638.png.aux.xml 52385639.png.aux.xml 52385647.png.aux.xml 52385648.png.aux.xml 52385649.png.aux.xml (update_priority_map) root@e5c04beb7310:/workspace/data/sample/image# ls new 52385627.png 52385628.png 52385629.png 52385637.png 52385638.png 52385639.png 52385647.png 52385648.png 52385649.png 52385627.png.aux.xml 52385628.png.aux.xml 52385629.png.aux.xml 52385637.png.aux.xml 52385638.png.aux.xml 52385639.png.aux.xml 52385647.png.aux.xml 52385648.png.aux.xml 52385649.png.aux.xml (update_priority_map) root@e5c04beb7310:/workspace/data/sample/image# Tip GISが使える方は、指定した範囲の3次メッシュコードのポリゴンとともに画像を表示して、対象範囲の画像がダウンロードされているか確認することも可能です。"
  },
  "manual/environment.html": {
    "href": "manual/environment.html",
    "title": "環境構築 | 3D都市モデルの更新優先度マップ",
    "keywords": "環境構築 概要 本ページでは、更新優先度マップ作成スクリプトが動作する環境構築の方法を記載しています。 前提条件 本マニュアルは以下のスペックを持つワークステーションで動かした結果に基づき作成しています。 OS: Ubuntu20.04 LTS (Windows11上にWSL2を用いて構築) CPU: Intel(R) Xeon(R) W-2223 GPU: NVIDIA T1000 8GB そのため、以下の条件下で動かすことを想定しています。 インターネットにつながる環境であること NVIDIA社製のGPUを搭載していること git clone時に100MB以上のファイルがあるため、Git LFSがインストールされていること DockerおよびNVIDIA Container Toolkit(nvidia-docker)を導入していること また、ウェブブラウザおよびGISとして以下のものを使用していますが、ご自分で使用しているソフトウェアで構いません。 ウェブブラウザ: Microsoft Edge GIS: QGIS STEP1: リポジトリのクローン 更新優先度マップ作成のスクリプトをGitHubリポジトリよりクローンして入手します。 HTTPS SSH git clone https://github.com/pascoais/PLATEAU-UC22-007-Update-Priority-Map.git [リポジトリのクローン先] git clone git@github.com:pascoais/PLATEAU-UC22-007-Update-Priority-Map.git [リポジトリのクローン先] リポジトリのクローン先に更新優先度マップ作成のスクリプトが格納されていることを確認後、dataおよびpretrainedにあるZIPファイルを解凍します。 Tip 生成した更新優先度マップの表示のため、リポジトリのクローン先 はGISやWebGISが実行できる環境のパスを推奨します。 WSL2を使用している場合は、/mnt/c/でWindows OS側のCドライブを指定することができます。 なお、日本語が含まれないようにしてください。 例) Windows OS側のパスがC:\\workspaceの場合は、/mnt/c/workspace STEP2: Dockerイメージの作成 STEP2-1: Dockerイメージを作成 cd environments docker image build -t [リポジトリ名]:[タグ] . STEP2-2: 作成したDockerイメージの確認 docker image ls REPOSITORYおよびTAGの箇所に、リポジトリ名とタグが表示されていれば問題ありません。 例) 以下の条件でDockerイメージを作成し、作成されたことを確認 リポジトリ名: update-priority-map タグ: 202303 $ cd environments $ docker image build -t update-priority-map:202303 . $ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE update-priority-map 202303 dc8bf31fdba4 About a minute ago 16.7GB STEP3: コンテナの起動 STEP3-1: コンテナの起動 docker run --gpus all -v [ホスト側のパス]:/workspace -it [リポジトリ名]:[タグ] /bin/bash リポジトリ名およびタグにはSTEP2: Dockerイメージの作成で使用したものを指定してください。 また、ホスト側のパスにはGitHubからクローンしてきたリポジトリのトップディレクトリのパスを指定してください。 STEP3-2: GPUを認識しているか確認 以下のコマンドが実行できる場合は、GPUを認識しています。 nvidia-smi 例) 以下の条件の場合におけるコンテナの起動 Dockerイメージ リポジトリ名: update-priority-map タグ: 202303 リポジトリをクローンした場所: /mnt/c/Workspace $ docker run --gpus all -v /mnt/c/Workspace/PLATEAU-UC22-007-Update-Priority-Map:/workspace -it update-priority-map:202303 /bin/bash コンテナが正常に起動すると、以下のような表示に変わります。 (update_priority_map) root@f4dc7e0c7cd9:/workspace# GPUを認識しているか確かめるために、nvidia-smi コマンドを実行します。 以下のような出力が表示されれば、コンテナ側でGPUを認識しています。 (update_priority_map) root@f4dc7e0c7cd9:/workspace# nvidia-smi +-----------------------------------------------------------------------------+ | NVIDIA-SMI 510.47.03 Driver Version: 511.65 CUDA Version: 11.6 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 NVIDIA T1000 8GB On | 00000000:21:00.0 Off | N/A | | 35% 36C P8 N/A / 50W | 735MiB / 8192MiB | 9% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: | | GPU GI CI PID Type Process name GPU Memory | | ID ID Usage | |=============================================================================| | 0 N/A N/A 24 G /Xwayland N/A | +-----------------------------------------------------------------------------+"
  },
  "manual/run_change_detection.html": {
    "href": "manual/run_change_detection.html",
    "title": "変化検出の実行 | 3D都市モデルの更新優先度マップ",
    "keywords": "変化検出の実行 概要 本ページでは、深層学習モデルを用いて旧時期航空写真と新時期ALOS-3衛星（シミュレーション）画像から建築物の変化確率画像を生成します。 STEP1: 建築物の変化確率画像の生成 以下のコマンドを実行して旧時期画像と新時期画像から建築物の変化確率画像を生成します。 python generate_probmap.py STEP2: 生成した建築物の変化確率画像の確認 lsコマンドで更新優先度マップ作成の条件設定にて設定した画像の保存先にTIFF形式の画像が生成されていることを確認します。 (update_priority_map) root@e5c04beb7310:/workspace/data/sample/probmap# ls 52385627.tif 52385628.tif 52385629.tif 52385637.tif 52385638.tif 52385639.tif 52385647.tif 52385648.tif 52385649.tif (update_priority_map) root@e5c04beb7310:/workspace/data/sample/probmap# Tip GISが使える方は、指定した範囲の3次メッシュコードのポリゴンとともに生成した建築物の変化確率画像を表示して、確認することも可能です。"
  },
  "manual/setting.html": {
    "href": "manual/setting.html",
    "title": "更新優先度マップ作成の条件設定 | 3D都市モデルの更新優先度マップ",
    "keywords": "更新優先度マップ作成の条件設定 概要 本ページでは、更新優先度マップ作成にあたり、以下の条件を設定します。 更新優先度マップの作成領域 建築物の変化検出に使用する画像の保存場所 建築物の変化検出に使用する画像のズームレベル STEP1: 更新優先度マップ作成領域の設定 更新優先度マップを作成したい領域を含む3次メッシュコードを以下のサンプルにならい、テキストファイルに記載します。 52385627 52385628 52385629 52385637 52385638 52385639 52385647 52385648 52385649 3次メッシュコードについては、Project PLATEAUで公開しているCityGML形式の3D都市モデルに付随する図郭マップ（例）のPDFなどをご覧ください。 なお、処理の関係上、日本全国の3次メッシュポリゴンのESRI Shapefileが./data/Japan-3rd-meshに格納されています。そのため、GISが使える方はそのデータを用いて3次メッシュコードを確認することもできます。 ▲ G空間情報センターで公開されているCityGML形式の3D都市モデルに付随する図郭マップで確認した例 ▲ QGISを用いて./data/Japan-3rd-meshに格納されている3次メッシュポリゴンで確認した例 STEP2: 画像ダウンロードの設定 ./conf/config.yml （以下、設定ファイルと記載）に以下の項目を設定します。 STEP1で設定した更新優先度マップ作成領域のテキストファイルのパスをaerial_download.mesh_codeに記載してください。 設定ファイルの aerial_download.output に画像保存先のパスを記載してください。 aerial_download: scene: old url: 'https://gic-plateau.s3.ap-northeast-1.amazonaws.com/2020/ortho/tiles' mesh_code : &mesh_code ./data/sample/aoi/3rd_mesh_code_list.txt zoom_level: 19 output: &image_path ./data/sample/image Warning 設定ファイル の alos3_download.url は検証時のままになっています。ALOS-3衛星（シミュレーション）画像の公開先URLに変更してお使いください。 Tip 福島県郡山市の航空写真は、東側がズームレベル19で提供されていません。そのため、当該地域をダウンロードする場合は、ズームレベル18でダウンロードしてください。 大阪府大阪市の航空写真は、解像度が1mとなります。そのため、当該地域をダウンロードする場合は、ズームレベル17でダウンロードすることをお勧めいたします。 ダウンロードする旧時期航空写真のズームレベルに関してはaerial_download.zoom_levelに記載されています。 STEP3: 処理結果出力先の設定 設定ファイルを用いて建築物の変化確率画像、更新優先度マップ、スタイリングした更新優先度マップの出力先を設定します。 建築物の変化確率画像はgenerate_probmap.outputに、更新優先度マップはcreate_mesh.outputに、スタイルを反映した更新優先度マップはstyle.output_dirに出力先のパスを記載してください。 また、作成する更新優先度マップのファイル名をcreate_mesh.filenameに記載してください。 建築物の変化確率画像の出力先 generate_probmap: image_path: *image_path target: *mesh_code patch_size: 1024 batch_size: 1 cd_weight: pretrained/unet.pth sr_weight: pretrained/rrdb.pth output: &probmap ./data/sample/probmap 更新優先度マップの出力先 更新優先度マップの出力先以外に出力ファイル名も記載してください。 create_mesh: probmap: *probmap target: *mesh_code bldg: &lod0 ./data/citygml-bldg-lod0/22203_numazu-shi_bldg.shp threshold: '' epsg: 6676 output: &mesh ./data/sample/mesh filename: sample スタイルを反映した更新優先度マップの出力先 style: mesh: *mesh output_dir: ./data/sample/priority_map denom: lod0 num_classes: 5 stroke: '#000000' stroke-width: 2.0 stroke-opacity: 1.0 fill: ['#ffffff', '#98e1ff', '#daffc7', '#fee480', '#fe8080'] fill-opacity: 0.4 STEP4: 更新優先度の計算に関する設定 更新優先度計算時に使用する建築物ポリゴンのパスおよび変化率の分母を設定します。 建築物ポリゴン Project PLATEAUにて公開している3D都市モデル（CityGML形式）から建築物のLOD0情報を抽出し作成したポリゴンを./data/citygml-bldg-lod0に格納しております。 更新優先度マップを作成する対象の自治体名が記載されたESRI Shapefile（拡張子がshpのファイル）のパスを設定ファイルのcreate_mesh.bldgに記載してください。 create_mesh: probmap: *probmap target: *mesh_code bldg: &lod0 ./data/citygml-bldg-lod0/22203_numazu-shi_bldg.shp threshold: ./data/sample/catalog epsg: 6676 output: &mesh ./data/sample/mesh 変化率の分母 変化率計算時に使用する指標を以下から選択し、設定ファイルのstyle.denomに記載してください。 mesh: 1メッシュ当たりの面積 lod0: 1メッシュ当たりの建築物ポリゴンの面積 style: mesh: *mesh output_dir: ./data/sample/priority_map denom: lod0 num_classes: 5 stroke: '#000000' stroke-width: 2.0 stroke-opacity: 1.0 fill: ['#ffffff', '#98e1ff', '#daffc7', '#fee480', '#fe8080'] fill-opacity: 0.4"
  },
  "manual/view_update_priority_map.html": {
    "href": "manual/view_update_priority_map.html",
    "title": "更新優先度マップの表示 | 3D都市モデルの更新優先度マップ",
    "keywords": "更新優先度マップの表示 概要 本ページでは、作成した更新優先度マップの表示を行います。 PLATEAU VIEWでの表示 作成した更新優先度マップのGeoJSONファイルをPLATEAU VIEWにドラッグ&ドロップすることで表示されます。 GISでの表示 ダウンロードした旧時期航空写真や新時期ALOS-3衛星（シミュレーション）画像、更新優先度マップをGISに表示させることにより、実際に更新優先度が高いメッシュでどのくらい建築物の面積が変わっているかなどを確認することができます。 なお、GISで更新優先度マップを表示した場合は、こちらで設定したスタイルは反映されません。 更新優先度マップと旧時期航空写真を表示 更新優先度マップと新時期ALOS-3衛星シミュレーション画像を表示"
  }
}